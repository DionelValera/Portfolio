{"version":3,"sources":["../src/types.ts","../src/constants.ts","../src/utils/registry-providers/azure.ts","../src/utils/blocks/ts/strings.ts","../src/utils/registry-providers/bitbucket.ts","../src/utils/registry-providers/github.ts","../src/utils/blocks/ts/url.ts","../src/utils/registry-providers/gitlab.ts","../src/utils/registry-providers/http.ts","../src/utils/registry-providers/jsrepo.ts","../src/utils/blocks/ts/result.ts","../src/utils/manifest.ts","../src/utils/registry-providers/index.ts"],"names":["blockSchema","categorySchema","manifestMeta","peerDependencySchema","configFileSchema","manifestConfigFileSchema","accessLevel","manifestSchema","MANIFEST_FILE","CONFIG_FILE","DEFAULT_BRANCH","azure","url","opts","parsed","parseUrl","owner","repoName","normalizedUrl","project","ref","refs","state","resourcePath","versionType","token","filePath","color","fullyQualified","repo","rest","specifier","startsWithOneOf","str","strings","s","endsWithOneOf","bitbucket","f","headers","key","value","response","github","join","segments","removeLeadingAndTrailingSlash","segment","newSegment","removeLeadingSlash","removeTrailingSlash","addTrailingSlash","BASE_URL","gitlab","baseUrl","error","tempRef","http","u","parsedUrl","NAME_REGEX","jsrepo","scope","registryName","version","name","Result","result","success","failure","fn","val","Ok","err","Err","defaultVal","_","def","message","parseManifest","json","validated","R","createManifest","categories","configFiles","config","providers","selectProvider","p","fetchRaw","verbose","fetchManifest","manifest"],"mappings":"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","file":"chunk-2Y5JPVGF.js","sourcesContent":["import * as v from 'valibot';\n\nexport const blockSchema = v.object({\n\tname: v.string(),\n\tcategory: v.string(),\n\tlocalDependencies: v.array(v.string()),\n\tdependencies: v.array(v.string()),\n\tdevDependencies: v.array(v.string()),\n\ttests: v.boolean(),\n\tdocs: v.optional(v.boolean(), false),\n\tlist: v.optional(v.boolean(), true),\n\t/** Where to find the block relative to root */\n\tdirectory: v.string(),\n\tsubdirectory: v.boolean(),\n\tfiles: v.array(v.string()),\n\t_imports_: v.record(v.string(), v.string()),\n});\n\nexport const categorySchema = v.object({\n\tname: v.string(),\n\tblocks: v.array(blockSchema),\n});\n\nexport const manifestMeta = v.object({\n\tauthors: v.optional(v.array(v.string())),\n\tbugs: v.optional(v.string()),\n\tdescription: v.optional(v.string()),\n\thomepage: v.optional(v.string()),\n\trepository: v.optional(v.string()),\n\ttags: v.optional(v.array(v.string())),\n});\n\nexport const peerDependencySchema = v.record(\n\tv.string(),\n\tv.union([\n\t\tv.string(),\n\t\tv.object({\n\t\t\tversion: v.string(),\n\t\t\tmessage: v.string(),\n\t\t}),\n\t])\n);\n\nexport type PeerDependency = v.InferOutput<typeof peerDependencySchema>;\n\nexport const configFileSchema = v.object({\n\tname: v.string(),\n\tpath: v.string(),\n\texpectedPath: v.optional(v.string()),\n\toptional: v.optional(v.boolean(), false),\n});\n\nexport type ConfigFile = v.InferOutput<typeof configFileSchema>;\n\nexport const manifestConfigFileSchema = v.object({\n\t...configFileSchema.entries,\n\tdependencies: v.optional(v.array(v.string())),\n\tdevDependencies: v.optional(v.array(v.string())),\n});\n\nexport const accessLevel = v.union([\n\tv.literal('public'),\n\tv.literal('private'),\n\tv.literal('marketplace'),\n]);\n\nexport const manifestSchema = v.object({\n\tname: v.optional(v.string()),\n\tversion: v.optional(v.string()),\n\tmeta: v.optional(manifestMeta),\n\taccess: v.optional(accessLevel),\n\tdefaultPaths: v.optional(v.record(v.string(), v.string())),\n\tpeerDependencies: v.optional(peerDependencySchema),\n\tconfigFiles: v.optional(v.array(manifestConfigFileSchema)),\n\tcategories: v.array(categorySchema),\n});\n\nexport type Meta = v.InferOutput<typeof manifestMeta>;\n\nexport type Category = v.InferOutput<typeof categorySchema>;\n\nexport type Block = v.InferOutput<typeof blockSchema>;\n\nexport type Manifest = v.InferOutput<typeof manifestSchema>;\n","export const MANIFEST_FILE = 'jsrepo-manifest.json';\nexport const CONFIG_FILE = 'jsrepo.json';\n","import color from 'chalk';\nimport type { ParseOptions, RegistryProvider, RegistryProviderState } from './types';\n\nconst DEFAULT_BRANCH = 'main';\n\nexport interface AzureProviderState extends RegistryProviderState {\n\towner: string;\n\trepoName: string;\n\tproject: string;\n\trefs: 'heads' | 'tags';\n\tref: string;\n}\n\n/** Valid paths\n *\n *  `azure/<org>/<project>/<repo>/(tags|heads)/<ref>`\n */\nexport const azure: RegistryProvider = {\n\tname: 'azure',\n\n\tmatches: (url) => url.toLowerCase().startsWith('azure'),\n\n\tparse: (url, opts) => {\n\t\tconst parsed = parseUrl(url, opts);\n\n\t\treturn {\n\t\t\turl: parsed.url,\n\t\t\tspecifier: parsed.specifier,\n\t\t};\n\t},\n\n\tbaseUrl: (url) => {\n\t\tconst { owner, repoName } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn `https://dev.azure.com/${owner}/_git/${repoName}`;\n\t},\n\n\tstate: async (url) => {\n\t\tconst {\n\t\t\turl: normalizedUrl,\n\t\t\towner,\n\t\t\tproject,\n\t\t\trepoName,\n\t\t\tref,\n\t\t\trefs,\n\t\t} = parseUrl(url, { fullyQualified: false });\n\n\t\treturn {\n\t\t\towner,\n\t\t\trepoName,\n\t\t\tref,\n\t\t\trefs,\n\t\t\tproject,\n\t\t\turl: normalizedUrl,\n\t\t\tprovider: azure,\n\t\t} satisfies AzureProviderState;\n\t},\n\n\tresolveRaw: async (state, resourcePath) => {\n\t\t// essentially assert that we are using the correct state\n\t\tif (state.provider.name !== azure.name) {\n\t\t\tthrow new Error(\n\t\t\t\t`You passed the incorrect state object (${state.provider.name}) to the ${azure.name} provider.`\n\t\t\t);\n\t\t}\n\n\t\tconst { owner, repoName, project, ref, refs } = state as AzureProviderState;\n\n\t\tconst versionType = refs === 'tags' ? 'tag' : 'branch';\n\n\t\treturn new URL(\n\t\t\t`https://dev.azure.com/${owner}/${project}/_apis/git/repositories/${repoName}/items?path=${resourcePath}&api-version=7.2-preview.1&versionDescriptor.version=${ref}&versionDescriptor.versionType=${versionType}`\n\t\t);\n\t},\n\n\tauthHeader: (token) => ['Authorization', `Bearer ${token}`],\n\n\tformatFetchError: (state, filePath) => {\n\t\treturn `There was an error fetching \\`${color.bold(filePath)}\\` from ${color.bold(state.url)}.\n\n${color.bold('This may be for one of the following reasons:')}\n1. Either \\`${color.bold(filePath)}\\` or the containing repository doesn't exist\n2. Your repository path is incorrect (wrong branch, wrong tag)\n3. You are using an expired access token or a token that doesn't have access to this repository\n4. The cached state for this git provider is incorrect (try using ${color.bold('--no-cache')})\n`;\n\t},\n};\n\nfunction parseUrl(\n\turl: string,\n\t{ fullyQualified }: ParseOptions\n): {\n\turl: string;\n\towner: string;\n\tproject: string;\n\trepoName: string;\n\tref: string;\n\trefs: 'tags' | 'heads';\n\tspecifier?: string;\n} {\n\tconst repo = url.replaceAll(/(azure\\/)/g, '');\n\n\tlet [owner, project, repoName, ...rest] = repo.split('/');\n\n\tlet specifier: string | undefined;\n\n\tif (fullyQualified) {\n\t\tspecifier = rest.slice(rest.length - 2).join('/');\n\n\t\trest = rest.slice(0, rest.length - 2);\n\t}\n\n\tlet ref: string = DEFAULT_BRANCH;\n\n\t// checks if the type of the ref is tags or heads\n\tlet refs: 'heads' | 'tags' = 'heads';\n\n\tif (['tags', 'heads'].includes(rest[0])) {\n\t\trefs = rest[0] as 'heads' | 'tags';\n\n\t\tif (rest[1] && rest[1] !== '') {\n\t\t\tref = rest[1];\n\t\t}\n\t}\n\n\treturn {\n\t\turl: `azure/${owner}/${project}/${repoName}${ref ? `/${refs}/${ref}` : ''}`,\n\t\towner: owner,\n\t\trepoName: repoName,\n\t\tproject,\n\t\tref,\n\t\trefs,\n\t\tspecifier,\n\t};\n}\n","/*\n\tInstalled from @ieedan/std\n*/\n\n/** Returns the string that matches the string (if it exits). Great for matching string union types.\n *\n * @param str\n * @param strings\n * @returns\n *\n * ## Usage\n * ```ts\n * const methods = ['GET', 'PUT', 'POST', 'PATCH', 'DELETE'] as const;\n *\n * const methodStr: string = 'GET';\n *\n * const method = equalsOneOf(methodStr, methods);\n *\n * if (method) {\n *  // if method was just a string this would be a type error\n * \tmethods.includes(method)\n * }\n * ```\n */\nexport function equalsOneOf<T extends string>(str: string, strings: readonly T[]): T | undefined {\n\tfor (const s of strings) {\n\t\tif (s === str) return s;\n\t}\n\n\treturn undefined;\n}\n\n/** Returns the matched prefix for the string (if it exists). Great for matching string union types.\n *\n * @param str\n * @param strings\n * @returns\n *\n * ## Usage\n * ```ts\n * startsWithOneOf('ab', 'a', 'c'); // 'a'\n * startsWithOneOf('cc', 'a', 'b'); // undefined\n * ```\n */\nexport function startsWithOneOf<T extends string>(\n\tstr: string,\n\tstrings: readonly T[]\n): T | undefined {\n\tfor (const s of strings) {\n\t\tif (str.startsWith(s)) return s;\n\t}\n\n\treturn undefined;\n}\n\n/** Returns the matched suffix for the string (if it exists). Great for matching string union types.\n *\n * @param str\n * @param strings\n * @returns\n *\n * ## Usage\n * ```ts\n * endsWithOneOf('cb', 'a', 'b'); // 'b'\n * endsWithOneOf('cc', 'a', 'b'); // undefined\n * ```\n */\nexport function endsWithOneOf<T extends string>(str: string, strings: readonly T[]): T | undefined {\n\tfor (const s of strings) {\n\t\tif (str.endsWith(s)) return s;\n\t}\n\n\treturn undefined;\n}\n\n/** Case insensitive equality. Returns true if `left.toLowerCase()` and `right.toLowerCase()` are equal.\n *\n * @param left\n * @param right\n * @returns\n *\n * ## Usage\n * ```ts\n * iEqual('Hello, World!', 'hello, World!'); // true\n * ```\n */\nexport function iEqual(left: string, right: string): boolean {\n\treturn left.toLowerCase() === right.toLowerCase();\n}\n","import color from 'chalk';\nimport { startsWithOneOf } from '../blocks/ts/strings';\nimport type { ParseOptions, RegistryProvider, RegistryProviderState } from './types';\n\nconst DEFAULT_BRANCH = 'main';\n\nexport interface BitBucketProviderState extends RegistryProviderState {\n\towner: string;\n\trepoName: string;\n\tref: string;\n}\n\n/** Valid paths\n *\n * `bitbucket/ieedan/std`\n *\n * `https://bitbucket.org/ieedan/std/src/main/`\n *\n * `https://bitbucket.org/ieedan/std/src/next/`\n *\n * `https://bitbucket.org/ieedan/std/src/v2.0.0/`\n *\n */\nexport const bitbucket: RegistryProvider = {\n\tname: 'bitbucket',\n\n\tmatches: (url) =>\n\t\tstartsWithOneOf(url.toLowerCase(), ['bitbucket', 'https://bitbucket.org']) !== undefined,\n\n\tparse: (url, opts) => {\n\t\tconst parsed = parseUrl(url, opts);\n\n\t\treturn {\n\t\t\turl: parsed.url,\n\t\t\tspecifier: parsed.specifier,\n\t\t};\n\t},\n\n\tbaseUrl: (url) => {\n\t\tconst { owner, repoName } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn `https://bitbucket.org/${owner}/${repoName}`;\n\t},\n\n\tstate: async (url, { token, fetch: f = fetch } = {}) => {\n\t\tlet { url: normalizedUrl, owner, repoName, ref } = parseUrl(url, { fullyQualified: false });\n\n\t\t// fetch default branch if ref was not provided\n\t\tif (ref === undefined) {\n\t\t\ttry {\n\t\t\t\tconst headers = new Headers();\n\n\t\t\t\tif (token !== undefined) {\n\t\t\t\t\tconst [key, value] = bitbucket.authHeader!(token);\n\n\t\t\t\t\theaders.append(key, value);\n\t\t\t\t}\n\n\t\t\t\tconst response = await f(\n\t\t\t\t\t`https://api.bitbucket.org/2.0/repositories/${owner}/${repoName}`,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders,\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tconst data = await response.json();\n\n\t\t\t\t\tref = data.mainbranch.name as string;\n\t\t\t\t} else {\n\t\t\t\t\tref = DEFAULT_BRANCH;\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\t// well find out it isn't correct later with a better error\n\t\t\t\tref = DEFAULT_BRANCH;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\towner,\n\t\t\tref,\n\t\t\trepoName,\n\t\t\turl: normalizedUrl,\n\t\t\tprovider: bitbucket,\n\t\t} satisfies BitBucketProviderState;\n\t},\n\n\tresolveRaw: async (state, resourcePath) => {\n\t\t// essentially assert that we are using the correct state\n\t\tif (state.provider.name !== bitbucket.name) {\n\t\t\tthrow new Error(\n\t\t\t\t`You passed the incorrect state object (${state.provider.name}) to the ${bitbucket.name} provider.`\n\t\t\t);\n\t\t}\n\n\t\tconst { owner, repoName, ref } = state as BitBucketProviderState;\n\n\t\treturn new URL(\n\t\t\tresourcePath,\n\t\t\t`https://api.bitbucket.org/2.0/repositories/${owner}/${repoName}/src/${ref}/`\n\t\t);\n\t},\n\n\tauthHeader: (token) => ['Authorization', `Bearer ${token}`],\n\n\tformatFetchError: (state, filePath) => {\n\t\treturn `There was an error fetching \\`${color.bold(filePath)}\\` from ${color.bold(state.url)}.\n\n${color.bold('This may be for one of the following reasons:')}\n1. Either \\`${color.bold(filePath)}\\` or the containing repository doesn't exist\n2. Your repository path is incorrect (wrong branch, wrong tag)\n3. You are using an expired access token or a token that doesn't have access to this repository\n4. The cached state for this git provider is incorrect (try using ${color.bold('--no-cache')})\n`;\n\t},\n};\n\nfunction parseUrl(\n\turl: string,\n\t{ fullyQualified = false }: ParseOptions\n): { url: string; owner: string; repoName: string; ref?: string; specifier?: string } {\n\tconst repo = url.replaceAll(/(https:\\/\\/bitbucket.org\\/)|(bitbucket\\/)/g, '');\n\n\tlet [owner, repoName, ...rest] = repo.split('/');\n\n\tlet specifier: string | undefined;\n\n\tif (fullyQualified) {\n\t\tspecifier = rest.slice(rest.length - 2).join('/');\n\n\t\trest = rest.slice(0, rest.length - 2);\n\t}\n\n\tlet ref: string | undefined;\n\n\tif (rest[0] === 'src') {\n\t\tref = rest[1];\n\t}\n\n\treturn {\n\t\turl: `bitbucket/${owner}/${repoName}${ref ? `/src/${ref}` : ''}`,\n\t\tspecifier,\n\t\towner,\n\t\trepoName: repoName,\n\t\tref,\n\t};\n}\n","import color from 'chalk';\nimport { startsWithOneOf } from '../blocks/ts/strings';\nimport type { ParseOptions, RegistryProvider, RegistryProviderState } from './types';\n\nconst DEFAULT_BRANCH = 'main';\n\nexport interface GitHubProviderState extends RegistryProviderState {\n\towner: string;\n\trepoName: string;\n\tref: string;\n}\n\n/** Valid paths\n *\n * `https://github.com/<owner>/<repo>`\n *\n * `github/<owner>/<repo>`\n *\n * `github/<owner>/<repo>/tree/<ref>`\n */\nexport const github: RegistryProvider = {\n\tname: 'github',\n\n\tmatches: (url) =>\n\t\tstartsWithOneOf(url.toLowerCase(), ['github', 'https://github.com']) !== undefined,\n\n\tparse: (url, opts) => {\n\t\tconst parsed = parseUrl(url, opts);\n\n\t\treturn {\n\t\t\turl: parsed.url,\n\t\t\tspecifier: parsed.specifier,\n\t\t};\n\t},\n\n\tbaseUrl: (url) => {\n\t\tconst { owner, repoName } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn `https://github.com/${owner}/${repoName}`;\n\t},\n\n\tstate: async (url, { token } = {}) => {\n\t\tlet { url: normalizedUrl, owner, repoName, ref } = parseUrl(url, { fullyQualified: false });\n\n\t\t// fetch default branch if ref was not provided\n\t\tif (ref === undefined) {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(`https://api.github.com/repos/${owner}/${repoName}`, {\n\t\t\t\t\theaders: { Authorization: `Bearer ${token}` },\n\t\t\t\t});\n\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tconst res = await response.json();\n\n\t\t\t\t\tref = res.default_branch as string;\n\t\t\t\t} else {\n\t\t\t\t\tref = DEFAULT_BRANCH;\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\t// we just want to continue on blissfully unaware the user will get an error later\n\t\t\t\tref = DEFAULT_BRANCH;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\towner,\n\t\t\tref,\n\t\t\trepoName,\n\t\t\turl: normalizedUrl,\n\t\t\tprovider: github,\n\t\t} satisfies GitHubProviderState;\n\t},\n\n\tresolveRaw: async (state, resourcePath) => {\n\t\t// essentially assert that we are using the correct state\n\t\tif (state.provider.name !== github.name) {\n\t\t\tthrow new Error(\n\t\t\t\t`You passed the incorrect state object (${state.provider.name}) to the ${github.name} provider.`\n\t\t\t);\n\t\t}\n\n\t\tconst { owner, repoName, ref } = state as GitHubProviderState;\n\n\t\treturn new URL(\n\t\t\t`${resourcePath}?ref=${ref}`,\n\t\t\t`https://api.github.com/repos/${owner}/${repoName}/contents/`\n\t\t);\n\t},\n\n\tauthHeader: (token) => ['Authorization', `Bearer ${token}`],\n\n\tformatFetchError: (state, filePath) => {\n\t\treturn `There was an error fetching \\`${color.bold(filePath)}\\` from ${color.bold(state.url)}.\n\n${color.bold('This may be for one of the following reasons:')}\n1. Either \\`${color.bold(filePath)}\\` or the containing repository doesn't exist\n2. Your repository path is incorrect (wrong branch, wrong tag)\n3. You are using an expired access token or a token that doesn't have access to this repository\n4. The cached state for this git provider is incorrect (try using ${color.bold('--no-cache')})\n`;\n\t},\n};\n\nfunction parseUrl(\n\turl: string,\n\t{ fullyQualified = false }: ParseOptions\n): { url: string; owner: string; repoName: string; ref?: string; specifier?: string } {\n\tconst repo = url.replaceAll(/(https:\\/\\/github.com\\/)|(github\\/)/g, '');\n\n\tlet [owner, repoName, ...rest] = repo.split('/');\n\n\tlet specifier: string | undefined;\n\n\tif (fullyQualified) {\n\t\tspecifier = rest.slice(rest.length - 2).join('/');\n\n\t\trest = rest.slice(0, rest.length - 2);\n\t}\n\n\tlet ref: string | undefined;\n\n\tif (rest.length > 0) {\n\t\tif (rest[0] === 'tree') {\n\t\t\tref = rest[1];\n\t\t}\n\t}\n\n\treturn {\n\t\turl: `github/${owner}/${repoName}${ref ? `/tree/${ref}` : ''}`,\n\t\tspecifier,\n\t\towner,\n\t\trepoName: repoName,\n\t\tref,\n\t};\n}\n","/*\n\tInstalled from github/ieedan/std\n*/\n\n/** Joins the segments into a single url correctly handling leading and trailing slashes in each segment.\n *\n * @param segments\n * @returns\n *\n * ## Usage\n * ```ts\n * const url = join('https://example.com', '', 'api/', '/examples/');\n *\n * console.log(url); // https://example.com/api/examples\n * ```\n */\nexport function join(...segments: string[]): string {\n\treturn segments\n\t\t.map((s) => removeLeadingAndTrailingSlash(s))\n\t\t.filter(Boolean)\n\t\t.join('/');\n}\n\n/** Removes the leading and trailing slash from the segment (if they exist)\n *\n * @param segment\n * @returns\n *\n * ## Usage\n * ```ts\n * const segment = removeLeadingAndTrailingSlash('/example/');\n *\n * console.log(segment); // 'example'\n * ```\n */\nexport function removeLeadingAndTrailingSlash(segment: string): string {\n\tconst newSegment = removeLeadingSlash(segment);\n\treturn removeTrailingSlash(newSegment);\n}\n\n/** Adds a leading and trailing to the beginning and end of the segment (if it doesn't already exist)\n *\n * @param segment\n * @returns\n *\n * ## Usage\n * ```ts\n * const segment = addLeadingAndTrailingSlash('example');\n *\n * console.log(segment); // '/example/'\n * ```\n */\nexport function addLeadingAndTrailingSlash(segment: string): string {\n\t// this is a weird case so feel free to handle it however you think it makes the most sense\n\tif (segment === '') return '//';\n\n\tconst newSegment = addLeadingSlash(segment);\n\treturn addTrailingSlash(newSegment);\n}\n\n/** Removes the leading slash from the beginning of the segment (if it exists)\n *\n * @param segment\n * @returns\n *\n * ## Usage\n * ```ts\n * const segment = removeLeadingSlash('/example');\n *\n * console.log(segment); // 'example'\n * ```\n */\nexport function removeLeadingSlash(segment: string): string {\n\tlet newSegment = segment;\n\tif (newSegment.startsWith('/')) {\n\t\tnewSegment = newSegment.slice(1);\n\t}\n\n\treturn newSegment;\n}\n\n/** Adds a leading slash to the beginning of the segment (if it doesn't already exist)\n *\n * @param segment\n * @returns\n *\n * ## Usage\n * ```ts\n * const segment = addLeadingSlash('example');\n *\n * console.log(segment); // '/example'\n * ```\n */\nexport function addLeadingSlash(segment: string): string {\n\tlet newSegment = segment;\n\tif (!newSegment.startsWith('/')) {\n\t\tnewSegment = `/${newSegment}`;\n\t}\n\n\treturn newSegment;\n}\n\n/** Removes the trailing slash from the end of the segment (if it exists)\n *\n * @param segment\n * @returns\n *\n * ## Usage\n * ```ts\n * const segment = removeTrailingSlash('example/');\n *\n * console.log(segment); // 'example'\n * ```\n */\nexport function removeTrailingSlash(segment: string): string {\n\tlet newSegment = segment;\n\tif (newSegment.endsWith('/')) {\n\t\tnewSegment = newSegment.slice(0, newSegment.length - 1);\n\t}\n\n\treturn newSegment;\n}\n\n/** Adds a trailing slash to the end of the segment (if it doesn't already exist)\n *\n * @param segment\n * @returns\n *\n * ## Usage\n * ```ts\n * const segment = addTrailingSlash('example');\n *\n * console.log(segment); // 'example/'\n * ```\n */\nexport function addTrailingSlash(segment: string): string {\n\tlet newSegment = segment;\n\tif (!newSegment.endsWith('/')) {\n\t\tnewSegment = `${newSegment}/`;\n\t}\n\n\treturn newSegment;\n}\n\n/** Removes the last segment of the url.\n *\n * @param url\n *\n * ## Usage\n * ```ts\n * const url = upOneLevel('/first/second');\n *\n * console.log(url); // '/first'\n * ```\n */\nexport function upOneLevel(url: string): string {\n\tif (url === '/') return url;\n\n\tconst lastIndex = removeTrailingSlash(url).lastIndexOf('/');\n\n\treturn url.slice(0, url.length - lastIndex - 1);\n}\n","import color from 'chalk';\nimport { startsWithOneOf } from '../blocks/ts/strings';\nimport * as u from '../blocks/ts/url';\nimport type { ParseOptions, RegistryProvider, RegistryProviderState } from './types';\n\nconst DEFAULT_BRANCH = 'main';\nconst BASE_URL = 'https://gitlab.com';\n\nexport interface GitLabProviderState extends RegistryProviderState {\n\tbaseUrl: string;\n\towner: string;\n\trepoName: string;\n\tref: string;\n}\n\n/** Valid paths\n *\n * `https://gitlab.com/ieedan/std`\n *\n * `https://gitlab.com/ieedan/std/-/tree/next`\n *\n * `https://gitlab.com/ieedan/std/-/tree/v2.0.0`\n *\n * `https://gitlab.com/ieedan/std/-/tree/v2.0.0?ref_type=tags`\n *\n * Self hosted:\n *\n * `gitlab:https://example.com/ieedan/std`\n */\nexport const gitlab: RegistryProvider = {\n\tname: 'gitlab',\n\n\tmatches: (url) =>\n\t\tstartsWithOneOf(url.toLowerCase(), ['gitlab/', 'gitlab:', 'https://gitlab.com']) !==\n\t\tundefined,\n\n\tparse: (url, opts) => {\n\t\tconst parsed = parseUrl(url, opts);\n\n\t\treturn {\n\t\t\turl: parsed.url,\n\t\t\tspecifier: parsed.specifier,\n\t\t};\n\t},\n\n\tbaseUrl: (url) => {\n\t\tconst { baseUrl, owner, repoName } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn u.join(baseUrl, owner, repoName);\n\t},\n\n\tstate: async (url, { token, fetch: f = fetch } = {}) => {\n\t\tlet {\n\t\t\tbaseUrl,\n\t\t\turl: normalizedUrl,\n\t\t\towner,\n\t\t\trepoName,\n\t\t\tref,\n\t\t} = parseUrl(url, { fullyQualified: false });\n\n\t\t// fetch default branch if ref was not provided\n\t\tif (ref === undefined) {\n\t\t\ttry {\n\t\t\t\tconst headers = new Headers();\n\n\t\t\t\tif (token !== undefined) {\n\t\t\t\t\tconst [key, value] = gitlab.authHeader!(token);\n\n\t\t\t\t\theaders.append(key, value);\n\t\t\t\t}\n\n\t\t\t\tconst response = await f(\n\t\t\t\t\tu.join(\n\t\t\t\t\t\tbaseUrl,\n\t\t\t\t\t\t`api/v4/projects/${encodeURIComponent(`${owner}/${repoName}`)}`\n\t\t\t\t\t),\n\t\t\t\t\t{\n\t\t\t\t\t\theaders,\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tconst data = await response.json();\n\n\t\t\t\t\tref = data.default_branch as string;\n\t\t\t\t} else {\n\t\t\t\t\tref = DEFAULT_BRANCH;\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\t// well find out it isn't correct later with a better error\n\t\t\t\tref = DEFAULT_BRANCH;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\towner,\n\t\t\trepoName,\n\t\t\tref,\n\t\t\tbaseUrl,\n\t\t\turl: normalizedUrl,\n\t\t\tprovider: gitlab,\n\t\t} satisfies GitLabProviderState;\n\t},\n\n\tresolveRaw: async (state, resourcePath) => {\n\t\t// essentially assert that we are using the correct state\n\t\tif (state.provider.name !== gitlab.name) {\n\t\t\tthrow new Error(\n\t\t\t\t`You passed the incorrect state object (${state.provider.name}) to the ${gitlab.name} provider.`\n\t\t\t);\n\t\t}\n\n\t\tconst { baseUrl, owner, repoName, ref } = state as GitLabProviderState;\n\n\t\treturn new URL(\n\t\t\tu.join(\n\t\t\t\tbaseUrl,\n\t\t\t\t`api/v4/projects/${encodeURIComponent(`${owner}/${repoName}`)}`,\n\t\t\t\t`repository/files/${encodeURIComponent(resourcePath)}/raw?ref=${ref}`\n\t\t\t)\n\t\t);\n\t},\n\n\tauthHeader: (token) => ['PRIVATE-TOKEN', token],\n\n\tformatFetchError: (state, filePath, error) => {\n\t\treturn `There was an error fetching \\`${color.bold(filePath)}\\` from ${color.bold(state.url)}: ${error}.\n\n${color.bold('This may be for one of the following reasons:')}\n1. Either \\`${color.bold(filePath)}\\` or the containing repository doesn't exist\n2. Your repository path is incorrect (wrong branch, wrong tag)\n3. You are using an expired access token or a token that doesn't have access to this repository\n4. The cached state for this git provider is incorrect (try using ${color.bold('--no-cache')})\n`;\n\t},\n};\n\nfunction parseUrl(\n\turl: string,\n\t{ fullyQualified }: ParseOptions\n): {\n\turl: string;\n\tbaseUrl: string;\n\towner: string;\n\trepoName: string;\n\tref?: string;\n\tspecifier?: string;\n} {\n\tlet baseUrl = BASE_URL;\n\n\tif (url.startsWith('gitlab:')) {\n\t\tbaseUrl = new URL(url.slice(7)).origin;\n\t}\n\n\tconst repo = url.replaceAll(/gitlab\\/|https:\\/\\/gitlab\\.com\\/|gitlab:https?:\\/\\/[^/]+\\//g, '');\n\n\tlet [owner, repoName, ...rest] = repo.split('/');\n\n\tlet specifier: string | undefined;\n\n\tif (fullyQualified) {\n\t\tspecifier = rest.slice(rest.length - 2).join('/');\n\n\t\trest = rest.slice(0, rest.length - 2);\n\t}\n\n\tlet ref: string | undefined;\n\n\tif (rest[0] === '-' && rest[1] === 'tree') {\n\t\tif (rest[2].includes('?')) {\n\t\t\tconst [tempRef] = rest[2].split('?');\n\n\t\t\tref = tempRef;\n\t\t} else {\n\t\t\tref = rest[2];\n\t\t}\n\t}\n\n\tconst isCustom = baseUrl !== BASE_URL;\n\n\treturn {\n\t\t// if the url is custom instance of gitlab we must append gitlab: so that the url can be parsed correctly\n\t\turl: u.join(\n\t\t\tisCustom ? `gitlab:${baseUrl}` : baseUrl,\n\t\t\t`${owner}/${repoName}${ref ? `/-/tree/${ref}` : ''}`\n\t\t),\n\t\tbaseUrl,\n\t\towner: owner,\n\t\trepoName: repoName,\n\t\tref,\n\t\tspecifier,\n\t};\n}\n","import color from 'chalk';\nimport * as u from '../blocks/ts/url';\nimport type { ParseOptions, RegistryProvider, RegistryProviderState } from './types';\n\nexport interface HttpProviderState extends RegistryProviderState {}\n\n/** Valid paths\n *\n *  `(https|http)://example.com`\n */\nexport const http: RegistryProvider = {\n\tname: 'http',\n\n\tmatches: (url) => {\n\t\t// if parsing is a success then it's a match\n\t\ttry {\n\t\t\tnew URL(url);\n\n\t\t\treturn true;\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t},\n\n\tparse: (url, opts) => {\n\t\tconst parsed = parseUrl(url, opts);\n\n\t\treturn {\n\t\t\turl: parsed.url,\n\t\t\tspecifier: parsed.specifier,\n\t\t};\n\t},\n\n\tbaseUrl: (url) => {\n\t\tconst { url: u } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn new URL(u).origin;\n\t},\n\n\tstate: async (url) => {\n\t\tconst { url: normalizedUrl } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn {\n\t\t\turl: normalizedUrl,\n\t\t\tprovider: http,\n\t\t} satisfies HttpProviderState;\n\t},\n\n\tresolveRaw: async (state, resourcePath) => {\n\t\t// essentially assert that we are using the correct state\n\t\tif (state.provider.name !== http.name) {\n\t\t\tthrow new Error(\n\t\t\t\t`You passed the incorrect state object (${state.provider.name}) to the ${http.name} provider.`\n\t\t\t);\n\t\t}\n\n\t\treturn new URL(resourcePath, state.url);\n\t},\n\n\tauthHeader: (token) => ['Authorization', `Bearer ${token}`],\n\n\tformatFetchError: (state, filePath, error) => {\n\t\treturn `There was an error fetching ${color.bold(new URL(filePath, state.url).toString())}\n\t\n${color.bold(error)}`;\n\t},\n};\n\nfunction parseUrl(\n\turl: string,\n\t{ fullyQualified }: ParseOptions\n): {\n\turl: string;\n\tspecifier?: string;\n} {\n\tconst parsedUrl = new URL(url);\n\n\tlet segments = parsedUrl.pathname.split('/');\n\n\tlet specifier: string | undefined;\n\n\tif (fullyQualified) {\n\t\tspecifier = segments.slice(segments.length - 2).join('/');\n\n\t\tsegments = segments.slice(0, segments.length - 2);\n\t}\n\n\treturn {\n\t\turl: u.addTrailingSlash(u.join(parsedUrl.origin, ...segments)),\n\t\tspecifier,\n\t};\n}\n","import color from 'chalk';\nimport type { ParseOptions, RegistryProvider, RegistryProviderState } from './types';\n\n/** Regex for scopes and registry names.\n * Names that don't match this regex will be rejected.\n *\n * ### Valid\n * ```txt\n * console\n * console0\n * console-0\n * ```\n *\n * ### Invalid\n * ```txt\n * Console\n * 0console\n * -console\n * console-\n * console--0\n * ```\n */\nexport const NAME_REGEX = /^(?![-0-9])(?!.*--)[a-z0-9]*(?:-[a-z0-9]+)*$/gi;\n\nexport const BASE_URL = 'https://www.jsrepo.com';\n\nexport interface JsrepoProviderState extends RegistryProviderState {\n\tscope: string;\n\tregistryName: string;\n\tversion: string;\n}\n\n/** Valid paths\n *\n *  `@ieedan/std`\n *  `@ieedan/std@latest`\n *  `@ieedan/std@1.0.0`\n *  `@ieedan/std@1.0.0/ts/math`\n */\nexport const jsrepo: RegistryProvider = {\n\tname: 'jsrepo',\n\n\tmatches: (url) => url.startsWith('@'),\n\n\tparse: (url, opts) => {\n\t\tconst parsed = parseUrl(url, opts);\n\n\t\treturn {\n\t\t\turl: parsed.url,\n\t\t\tspecifier: parsed.specifier,\n\t\t};\n\t},\n\n\tbaseUrl: (url) => {\n\t\tconst { scope, registryName, version } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn `${BASE_URL}/${scope}/${registryName}/v/${version}`;\n\t},\n\n\tstate: async (url) => {\n\t\tconst parsed = parseUrl(url, { fullyQualified: false });\n\n\t\treturn {\n\t\t\t...parsed,\n\t\t\tprovider: jsrepo,\n\t\t} satisfies JsrepoProviderState;\n\t},\n\n\tresolveRaw: async (state, resourcePath) => {\n\t\t// essentially assert that we are using the correct state\n\t\tif (state.provider.name !== jsrepo.name) {\n\t\t\tthrow new Error(\n\t\t\t\t`You passed the incorrect state object (${state.provider.name}) to the ${jsrepo.name} provider.`\n\t\t\t);\n\t\t}\n\n\t\tconst { scope, registryName, version } = state as JsrepoProviderState;\n\n\t\treturn new URL(\n\t\t\t`${BASE_URL}/api/scopes/${scope}/${registryName}/v/${version}/files/${resourcePath}`\n\t\t);\n\t},\n\n\tauthHeader: (token) => ['x-api-key', token],\n\n\tformatFetchError: (state, filePath, error) => {\n\t\tconst { scope, registryName, version } = state as JsrepoProviderState;\n\n\t\treturn `There was an error fetching ${filePath} from ${scope}/${registryName}@${version}\n\t\n${color.bold(error)}`;\n\t},\n};\n\nexport function parseUrl(\n\turl: string,\n\t{ fullyQualified }: ParseOptions\n): {\n\turl: string;\n\tspecifier?: string;\n\tscope: string;\n\tregistryName: string;\n\tversion: string;\n} {\n\tconst [scope, name, ...rest] = url.split('/');\n\n\tconst [registryName, version] = name.split('@');\n\n\tlet specifier: string | undefined;\n\n\tif (fullyQualified) {\n\t\tspecifier = rest.slice(rest.length - 2).join('/');\n\t}\n\n\tconst parsedUrl = `${scope}/${name}`;\n\n\treturn {\n\t\turl: parsedUrl,\n\t\tspecifier,\n\t\tscope,\n\t\tregistryName,\n\t\tversion: version ?? 'latest',\n\t};\n}\n","/*\n\tInstalled from github/ieedan/std\n*/\n\n/** This is just a helper type used only within this file */\ntype _Result<T, E> = { ok: true; val: T } | { ok: false; err: E };\n\n/** Result allows you to show to a consumer that a function might throw and force them to handle it.\n *\n *  `T` Value type\n *\n *  `E` Error type\n *\n * ## Usage\n *\n * ```ts\n * function functionThatMightFail(): Result<T, E>;\n * ```\n *\n * ## Usage\n *\n * ```ts\n * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello, World!\");\n *\n * const result = functionThatMightFail();\n *\n * console.log(result.unwrap()); // \"Hello, World!\"\n * ```\n */\nclass Result<T, E> {\n\tprivate readonly _result: _Result<T, E>;\n\n\tconstructor(result: _Result<T, E>) {\n\t\tthis._result = result;\n\t}\n\n\t/** Allows you to run callbacks based on the result.\n\t *\n\t * @param success callback to be run when result is success\n\t * @param failure callback to be run when result is failure\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.match(\n\t * \t(val) => val,\n\t * \t() => {\n\t * \t\tthrow new Error('oops!')\n\t * \t}\n\t * );\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello, World!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const val = result.match(\n\t * \t(val) => val,\n\t * \t() => {\n\t * \t\tthrow new Error('oops!')\n\t * \t}\n\t * );\n\t *\n\t * console.log(val); // \"Hello, World!\"\n\t * ```\n\t */\n\tmatch<A, B = A>(success: (val: T) => A, failure: (err: E) => B): A | B {\n\t\tif (!this._result.ok) {\n\t\t\treturn failure(this._result.err);\n\t\t}\n\n\t\treturn success(this._result.val);\n\t}\n\n\t/** Maps `Result<T, E>` to `Result<A, E>` using the passed mapping function\n\t *\n\t * @param fn Mapping function\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.map((val) => val.length);\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello, World!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const hello = result.map((val) => val.slice(0, 5));\n\t *\n\t * console.log(hello.unwrap()); // \"Hello\"\n\t * ```\n\t */\n\tmap<A>(fn: (val: T) => A): Result<A, E> {\n\t\treturn this.match(\n\t\t\t(val) => Ok(fn(val)),\n\t\t\t(err) => Err(err)\n\t\t);\n\t}\n\n\t/** In the `Ok` case returns the mapped value using the function else returns `defaultVal`\n\t *\n\t * @param defaultVal Value to be returned when `Err`\n\t * @param fn Mapping function to map in case of `Ok`\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.mapOr(1, (val) => val.length);\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"foo\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const length = result.mapOr(1, (val) => val.length);\n\t *\n\t * console.log(length); // 3\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const length = result.mapOr(1, (val) => val.length);\n\t *\n\t * console.log(length); // 1\n\t * ```\n\t */\n\tmapOr<A>(defaultVal: A, fn: (val: T) => A): A {\n\t\treturn this.match(\n\t\t\t(val) => fn(val),\n\t\t\t(_) => defaultVal\n\t\t);\n\t}\n\n\t/** In the `Ok` case returns the mapped value using `fn` else returns value of `def`\n\t *\n\t * @param def Mapping function called when `Err`\n\t * @param fn Mapping function called when `Ok`\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.mapOrElse(() => 1, (val) => val.length);\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"foo\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const length = result.mapOrElse(() => 1, (val) => val.length);\n\t *\n\t * console.log(length); // 3\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const length = result.mapOr(() => 1, (val) => val.length);\n\t *\n\t * console.log(length); // 1\n\t * ```\n\t */\n\tmapOrElse<A>(def: (err: E) => A, fn: (val: T) => A): A {\n\t\treturn this.match(\n\t\t\t(val) => fn(val),\n\t\t\t(err) => def(err)\n\t\t);\n\t}\n\n\t/** Maps `Result<T, E>` to `Result<T, A>` using the passed mapping function\n\t *\n\t * @param fn Mapping function\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.mapErr((err) => getCodeMsg(err));\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(10);\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const message = result.mapErr(() => \"Error\");\n\t *\n\t * console.log(message); // \"Error\"\n\t * ```\n\t */\n\tmapErr<A>(fn: (err: E) => A): Result<T, A> {\n\t\treturn this.match(\n\t\t\t(val) => Ok(val),\n\t\t\t(err) => Err(fn(err))\n\t\t);\n\t}\n\n\t/** In the `Err` case returns the mapped value using the function else returns `defaultVal`\n\t *\n\t * @param defaultVal Value to be returned when `Ok`\n\t * @param fn Mapping function to map in case of `Err`\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.mapErrOr(\"Should've been error\", (err) => getCodeMsg(err));\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"foo\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const message = result.mapErrOr(\"Should've been error\", () => \"Error\");\n\t *\n\t * console.log(message); // \"Should've been error\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(10);\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const message = result.mapErrOr(\"Should've been error\", () => \"Error\");\n\t *\n\t * console.log(message); // \"Error\"\n\t * ```\n\t */\n\tmapErrOr<A>(defaultVal: A, fn: (err: E) => A): A {\n\t\treturn this.match(\n\t\t\t(_) => defaultVal,\n\t\t\t(err) => fn(err)\n\t\t);\n\t}\n\n\t/** In the `Err` case returns the mapped value using the function else returns value of `def`\n\t *\n\t * @param def Mapping function called when `Ok`\n\t * @param fn Mapping function called when `Err`\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.mapErrOrElse(() => \"Value\", (_) => \"Error!\");\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"foo\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const length = result.mapErrOrElse(() => 1, (val) => val.length);\n\t *\n\t * console.log(length); // 1\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const length = result.mapOr(() => 1, (val) => val.length);\n\t *\n\t * console.log(length); // 4\n\t * ```\n\t */\n\tmapErrOrElse<A>(def: (val: T) => A, fn: (err: E) => A): A {\n\t\treturn this.match(\n\t\t\t(val) => def(val),\n\t\t\t(err) => fn(err)\n\t\t);\n\t}\n\n\t/** Returns true if result is `Ok`\n\t *\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.isOk();\n\t * ```\n\t */\n\tisOk(): boolean {\n\t\treturn this.match(\n\t\t\t() => true,\n\t\t\t() => false\n\t\t);\n\t}\n\n\t/** Returns true if result is `Err`\n\t *\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.isErr();\n\t * ```\n\t */\n\tisErr(): boolean {\n\t\treturn this.match(\n\t\t\t() => false,\n\t\t\t() => true\n\t\t);\n\t}\n\n\t/** Tries to return value if value is `Err` throws generic error message.\n\t *\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.unwrap();\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrap()); // \"Hello!\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * result.unwrap(); // Error: Attempted to call `.unwrap()` on a non `Ok` value.\n\t * ```\n\t */\n\tunwrap(): T {\n\t\treturn this.match(\n\t\t\t(val) => val,\n\t\t\t() => {\n\t\t\t\tthrow new Error('Attempted to call `.unwrap()` on a non `Ok` value.');\n\t\t\t}\n\t\t);\n\t}\n\n\t/** Tries to return err if value is `Ok` throws generic error message.\n\t *\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.unwrapErr();\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * result.unwrapErr(); // Error: Attempted to call `.unwrapErr()` on a non `Err` value.\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapErr()); // \"oops!\"\n\t * ```\n\t */\n\tunwrapErr(): E {\n\t\treturn this.match(\n\t\t\t() => {\n\t\t\t\tthrow new Error('Attempted to call `.unwrapErr()` on a non `Err` value.');\n\t\t\t},\n\t\t\t(err) => err\n\t\t);\n\t}\n\n\t/** Tries to unwrap the value if value is `Err` returns `defaultVal`\n\t *\n\t * @param defaultVal Value to be returned if `Err`\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.unwrapOr(7);\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapOr(\"Yellow!\")); // \"Hello!\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapOr(\"Yellow!\")); // \"Yellow!\"\n\t * ```\n\t */\n\tunwrapOr(defaultVal: T): T {\n\t\treturn this.match(\n\t\t\t(val) => val,\n\t\t\t(_) => defaultVal\n\t\t);\n\t}\n\n\t/** Tries to unwrap the error if vale is `Ok` returns `defaultVal`\n\t *\n\t * @param defaultVal\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.unwrapErrOr(\"Error\");\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapErrOr(\"Yellow!\")); // \"Yellow!\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapErrOr(\"Yellow!\")); // \"oops!\"\n\t * ```\n\t */\n\tunwrapErrOr(defaultVal: E): E {\n\t\treturn this.match(\n\t\t\t() => defaultVal,\n\t\t\t(err) => err\n\t\t);\n\t}\n\n\t/** Tries to return the value if value is `Err` calls `fn`\n\t *\n\t * @param fn Function called if `Err`\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.unwrapOrElse(() => \"Hello!\");\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapOrElse(() => \"oops!\")); // \"Hello!\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapOrElse(() => \"Hello!\")); // \"Hello!\"\n\t * ```\n\t *\n\t */\n\tunwrapOrElse(fn: (err: E) => T): T {\n\t\treturn this.match(\n\t\t\t(val) => val,\n\t\t\t(err) => fn(err)\n\t\t);\n\t}\n\n\t/** Tries to return the error if value is `Ok` calls `fn`\n\t *\n\t * @param fn Function called if `Ok`\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.unwrapErrOrElse(() => \"Error!\");\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapErrOrElse(() => \"oops!\")); // \"oops!\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapErrOrElse(() => \"Hello!\")); // \"oops!\"\n\t * ```\n\t *\n\t */\n\tunwrapErrOrElse(fn: (val: T) => E): E {\n\t\treturn this.match(\n\t\t\t(val) => fn(val),\n\t\t\t(err) => err\n\t\t);\n\t}\n\n\t/** Tries to return value if value is `Err` throws custom error message.\n\t *\n\t * @param message Message to show when value is `Err`\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.expect(\"Custom message\");\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.expect(\"I failed!\")); // \"Hello!\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * result.expect(\"I failed!\"); // Error: I failed!\n\t * ```\n\t */\n\texpect(message: string): T {\n\t\treturn this.match(\n\t\t\t(val) => val,\n\t\t\t() => {\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t);\n\t}\n\n\t/** Tries to return error value if value is `Ok` throws custom error message\n\t *\n\t * @param message\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.expectErr(\"Custom message\");\n\t * ```\n\t *\n\t * ## Usage\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.expectErr(\"I failed!\")); // Error: I failed!\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.expectErr(\"I failed!\")); // \"oops!\"\n\t * ```\n\t */\n\texpectErr(message: string): E {\n\t\treturn this.match(\n\t\t\t() => {\n\t\t\t\tthrow new Error(message);\n\t\t\t},\n\t\t\t(err) => err\n\t\t);\n\t}\n}\n\n/** Returns a new `Ok` result type with the provided value\n *\n * @param val Value of the result\n * @returns\n *\n * ## Usage\n *\n * ```ts\n * Ok(true);\n * ```\n *\n * ## Usage\n *\n * ```ts\n * const functionThatCanFail = (condition) => {\n * \tif (condition) {\n * \t\tOk(\"Success\")\n * \t}\n *\n * \treturn Err(\"Failure\");\n * }\n * ```\n */\nexport function Ok<T>(val: T): Result<T, never> {\n\treturn new Result<T, never>({ ok: true, val });\n}\n\n/** Returns a new `Err` result type with the provided error\n *\n * @param err Error of the result\n * @returns\n *\n * ## Usage\n *\n * ```ts\n * Err(\"I failed!\");\n * ```\n *\n * ## Usage\n *\n * ```ts\n * const functionThatCanFail = (condition) => {\n * \tif (condition) {\n * \t\tOk(\"Success\")\n * \t}\n *\n * \treturn Err(\"Failure\");\n * }\n * ```\n */\nexport function Err<E>(err: E): Result<never, E> {\n\treturn new Result<never, E>({ ok: false, err });\n}\n\nexport type { Result };\n","import * as v from 'valibot';\nimport { type Category, categorySchema, type Manifest, manifestSchema } from '../types';\nimport { Err, Ok, type Result } from './blocks/ts/result';\nimport type { RegistryConfig } from './config';\n\n/** Parses the json string (if it can be) into a manifest.\n *\n * @param json\n */\nexport function parseManifest(json: string): Result<Manifest, string> {\n\tlet parsed: unknown;\n\n\ttry {\n\t\tparsed = JSON.parse(json);\n\t} catch (err) {\n\t\treturn Err(`Error parsing manifest json ${err}`);\n\t}\n\n\t// first gen array-based config\n\tif (Array.isArray(parsed)) {\n\t\tconst validated = v.safeParse(v.array(categorySchema), parsed);\n\n\t\tif (!validated.success) {\n\t\t\treturn Err(\n\t\t\t\t`Error parsing categories (array-based config) ${validated.issues.join(' ')}`\n\t\t\t);\n\t\t}\n\n\t\treturn Ok({\n\t\t\tprivate: false,\n\t\t\tcategories: validated.output,\n\t\t});\n\t}\n\n\tconst validated = v.safeParse(manifestSchema, parsed);\n\n\tif (!validated.success) {\n\t\treturn Err(`Error parsing manifest ${validated.issues.join(' ')}`);\n\t}\n\n\treturn Ok(validated.output);\n}\n\nexport function createManifest(\n\tcategories: Category[],\n\tconfigFiles: Manifest['configFiles'],\n\tconfig: RegistryConfig\n) {\n\tconst manifest: Manifest = {\n\t\tname: config.name,\n\t\tversion: config.version,\n\t\tmeta: config.meta,\n\t\taccess: config.access,\n\t\tdefaultPaths: config.defaultPaths,\n\t\tpeerDependencies: config.peerDependencies,\n\t\tconfigFiles,\n\t\tcategories,\n\t};\n\n\treturn manifest;\n}\n","import { MANIFEST_FILE } from '../../constants';\nimport type { Manifest } from '../../types';\nimport { Err, Ok, type Result } from '../blocks/ts/result';\nimport { parseManifest } from '../manifest';\nimport { type AzureProviderState, azure } from './azure';\nimport { type BitBucketProviderState, bitbucket } from './bitbucket';\nimport { type GitHubProviderState, github } from './github';\nimport { type GitLabProviderState, gitlab } from './gitlab';\nimport { http } from './http';\nimport { type JsrepoProviderState, jsrepo } from './jsrepo';\nimport type { RegistryProvider, RegistryProviderState } from './types';\n\nexport const providers = [jsrepo, github, gitlab, bitbucket, azure, http];\n\nexport function selectProvider(url: string): RegistryProvider | undefined {\n\tconst provider = providers.find((p) => p.matches(url));\n\n\treturn provider;\n}\n\nexport type FetchOptions = {\n\ttoken: string;\n\t/** Override the fetch method. */\n\tfetch?: typeof fetch;\n\tverbose: (str: string) => void;\n};\n\nexport async function fetchRaw(\n\tstate: RegistryProviderState,\n\tresourcePath: string,\n\t{ verbose, fetch: f = fetch, token }: Partial<FetchOptions> = {}\n): Promise<Result<string, string>> {\n\tconst url = await state.provider.resolveRaw(state, resourcePath);\n\n\tverbose?.(`Trying to fetch from ${url}`);\n\n\ttry {\n\t\t// having headers as a record covers more fetch implementations\n\t\tconst headers: Record<string, string> = {};\n\n\t\tif (token !== undefined && state.provider.authHeader) {\n\t\t\tconst [key, value] = state.provider.authHeader(token);\n\n\t\t\theaders[key] = value;\n\t\t}\n\n\t\tif (state.provider.name === github.name) {\n\t\t\theaders.Accept = 'application/vnd.github.raw+json';\n\t\t}\n\n\t\tconst response = await f(url.toString(), { headers });\n\n\t\tverbose?.(`Got a response from ${url} ${response.status} ${response.statusText}`);\n\n\t\tif (!response.ok) {\n\t\t\treturn Err(\n\t\t\t\tstate.provider.formatFetchError(\n\t\t\t\t\tstate,\n\t\t\t\t\tresourcePath,\n\t\t\t\t\t`${response.status} ${response.statusText}`\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\treturn Ok(await response.text());\n\t} catch (err) {\n\t\treturn Err(state.provider.formatFetchError(state, resourcePath, err));\n\t}\n}\n\nexport async function fetchManifest(\n\tstate: RegistryProviderState,\n\t{ fetch: f = fetch, ...rest }: Partial<FetchOptions> = {}\n): Promise<Result<Manifest, string>> {\n\tconst manifest = await fetchRaw(state, MANIFEST_FILE, { fetch: f, ...rest });\n\n\tif (manifest.isErr()) return Err(manifest.unwrapErr());\n\n\treturn parseManifest(manifest.unwrap());\n}\n\nexport * from './types';\n\nexport {\n\tjsrepo,\n\tgithub,\n\tgitlab,\n\tbitbucket,\n\tazure,\n\thttp,\n\ttype JsrepoProviderState,\n\ttype AzureProviderState,\n\ttype GitHubProviderState,\n\ttype GitLabProviderState,\n\ttype BitBucketProviderState,\n};\n"]}