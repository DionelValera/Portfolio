"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Biome = exports.Distribution = void 0;
const common_1 = require("./common");
/**
 * What kind of client Biome should use to communicate with the binary
 */
var Distribution;
(function (Distribution) {
    /**
     * Use this if you want to communicate with the WebAssembly client built for
     * bundlers
     */
    Distribution[Distribution["BUNDLER"] = 0] = "BUNDLER";
    /**
     * Use this if you want to communicate with the WebAssembly client built for
     * Node.JS
     */
    Distribution[Distribution["NODE"] = 1] = "NODE";
    /**
     * Use this if you want to communicate with the WebAssembly client built for
     * the Web
     */
    Distribution[Distribution["WEB"] = 2] = "WEB";
})(Distribution || (exports.Distribution = Distribution = {}));
class Biome extends common_1.BiomeCommon {
    /**
     * It creates a new instance of the class {Biome}.
     */
    static async create({ distribution }) {
        switch (distribution) {
            case Distribution.BUNDLER:
                return new Biome(await Promise.resolve().then(() => __importStar(require("@biomejs/wasm-bundler"))));
            case Distribution.NODE:
                return new Biome(await Promise.resolve().then(() => __importStar(require("@biomejs/wasm-nodejs"))));
            case Distribution.WEB:
                return new Biome(await Promise.resolve().then(() => __importStar(require("@biomejs/wasm-web"))));
            default:
                throw new Error(`Unknown distribution: ${distribution}`);
        }
    }
}
exports.Biome = Biome;
//# sourceMappingURL=index.js.map